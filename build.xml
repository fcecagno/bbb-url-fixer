<?xml version="1.0" encoding="UTF-8"?>

<project name="bbb-url-fixer" basedir=".">    

    <!-- ========================= MAVEN ============================ -->
    
    <property name="maven.version" value="2.1.3" />
    
    <target name="mvn-download">
        <mkdir dir="maven" />
        <get src="http://ftp.unicamp.br/pub/apache/maven/ant-tasks/2.1.3/binaries/maven-ant-tasks-${maven.version}.jar" dest="maven/" skipexisting="true" />
    </target>
    
    <target name="mvn-init" unless="compile.classpath" xmlns:artifact="urn:maven-artifact-ant" depends="mvn-download">
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant" 
            classpath="maven/maven-ant-tasks-${maven.version}.jar"/> 
        <condition property="maven.repo.local" value="${maven.repo.local}" else="${user.home}/.m2/repository">
            <isset property="maven.repo.local"/>
        </condition>        
        <artifact:localRepository id="local.repository" path="${maven.repo.local}"/> 
        <artifact:pom file="pom.xml" id="maven.project"/>
        <artifact:dependencies pathId="compile.classpath" filesetId="compile.fileset" useScope="compile">
            <pom refid="maven.project"/>
            <localRepository refid="local.repository"/>
        </artifact:dependencies>
        <artifact:dependencies pathId="test.classpath" filesetId="test.fileset" useScope="test">
            <pom refid="maven.project"/>
            <localRepository refid="local.repository"/>
        </artifact:dependencies>
        <artifact:dependencies pathId="runtime.classpath" filesetId="runtime.fileset" useScope="runtime">
            <pom refid="maven.project"/>
            <localRepository refid="local.repository"/>
        </artifact:dependencies>
        
        <copy todir="libs" flatten="true">            
            <fileset refid="runtime.fileset"/>
        </copy>
    </target>
    
    <!-- ========================= BUILD ============================ -->
    
    <target name="clean">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="target"/>
        </delete>      
    </target>        
    
    <target name="compile" depends="mvn-init">
        <mkdir dir="target/classes"/>        
        <javac srcdir="src/main/java" destdir="target/classes" debug="true" 
            classpathref="compile.classpath" source="1.7" target="1.7" includeantruntime="false"/>
        <copy todir="target/classes">
            <fileset dir="src/main/java" excludes="**/*.java"/>
        </copy>         
        <copy todir="target/classes" failonerror="false">
            <fileset dir="src/main/resources"/>
        </copy>              
    </target>             
    
    <target name="compile-test" depends="compile">   
        <mkdir dir="target/test-classes"/>
        <javac srcdir="src/test/java" destdir="target/test-classes" debug="true" 
            source="1.7" target="1.7" includeantruntime="false">
            <classpath>
                <path path="target/classes"/>
                <path refid="test.classpath"/>
            </classpath>
        </javac>
        <copy todir="target/test-classes">
            <fileset dir="src/test/java" excludes="**/*.java"/>
        </copy>      
    </target> 
        
    <!-- ========================= DIST ============================ -->

    <target name="dist-input-version">
		<property name="target.version" value="git" />
    </target>

    <target name="dist" depends="dist-input-version, compile">
        <copy todir="target/${ant.project.name}/lib" flatten="true">            
            <fileset refid="runtime.fileset"/>
            <fileset refid="test.fileset"/>
        </copy>
        <!-- temp exclude for server release -->
        <delete dir="target/${ant.project.name}/lib" includes="groovy*"/>
        <jar destfile="target/${ant.project.name}/lib/${ant.project.name}-${target.version}.jar">
            <fileset dir="target/classes" excludes="log4j.properties"/>
            <manifest>
                <attribute name="Main-Class" value="org.mconf.UrlFixer"/>
            </manifest>
        </jar>
        <!--copy todir="target/${ant.project.name}/home/apps/vod">
            <fileset dir="home/apps/vod"/>
        </copy-->
        <!--copy todir="target/${ant.project.name}/conf">
            <fileset dir="conf"/>
            <fileset dir="etc" includes="log4j.properties"/>
        </copy-->
        <!-- temp for server release
        <copy todir="target/${ant.project.name}/scripts">
            <fileset dir="etc" includes="*.groovy"/>         
        </copy>
        -->
        <copy todir="target/${ant.project.name}">
            <fileset dir="." includes="COPYING*,*.txt"/>            
        </copy>
        <!--copy todir="target/${ant.project.name}/license">
            <fileset dir="license"/>
        </copy-->
        <path id="lib.jars">
            <path location="target/${ant.project.name}/conf"/>
            <fileset dir="target/${ant.project.name}/lib"/>
        </path>
        <pathconvert targetos="unix" property="lib.jars.path.unix" refid="lib.jars">
            <map from="${basedir}/target/${ant.project.name}/conf" to="conf"/>
            <map from="${basedir}/target/${ant.project.name}/lib" to="lib"/>
        </pathconvert>
        <pathconvert targetos="windows" property="lib.jars.path.windows" refid="lib.jars">
            <map from="${basedir}/target/${ant.project.name}/conf" to="conf"/>
            <map from="${basedir}/target/${ant.project.name}/lib" to="lib"/>            
        </pathconvert>
        <zip destfile="target/${ant.project.name}-${target.version}.zip">
            <zipfileset dir="target/${ant.project.name}" excludes="home/apps/vod/*" prefix="${ant.project.name}-${target.version}"/>
        </zip>      
    </target>

</project>
